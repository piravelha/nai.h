#include "../../nai.h"
#include "../../nai_macro.h"


bool transform(Token_Stream *in, Token_Stream *out)
{
    String_View path;
    String content = {0};
    String_View trimmed;

    TRY(ts_expect_value(in, "FILE"));
    TRY(ts_expect_type(in, '('));
    path = ts_value(*in);
    TRY(ts_expect_type(in, TT_STRING));
    TRY(ts_expect_type(in, ')'));

    // trim double quotes from string literal
    path.data++;
    path.count -= 2;

    TRY(read_file_sv(path, &content));

    trimmed = sv_trim(str_to_sv(content));
    *out = ts_fmt("\"%.*s\"", SV(trimmed));

    return true;
}

int main(int argc, char **argv)
{
    Token_Stream stream;
    Cmd cmd = {0};
    const char *generated = ".generated.c";
    
    REBUILD(argc, argv);

    stream = lex_file("main.c");
    stream = ts_replace(stream, transform);
    write_file(generated, stream.content);

    cmd_append(&cmd, "cc", generated, "-o", "main");
    cmd_run(cmd);

    format_file(generated);

    return 0;
}



